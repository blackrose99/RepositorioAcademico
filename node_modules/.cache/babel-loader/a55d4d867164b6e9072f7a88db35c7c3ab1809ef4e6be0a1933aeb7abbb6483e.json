{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mannu\\\\Documents\\\\ReactProjects\\\\repositorio_v1\\\\src\\\\Componentes\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EstudiantesService from '../../Services/EstudianteServices'; // Ajusta la ruta según tu estructura de carpetas\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EstudianteLoginForm() {\n  _s();\n  const [correoOUsuario, setCorreoOUsuario] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const estudianteId = await EstudiantesService.loginEstudiante(correoOUsuario, password);\n\n      // Autenticación exitosa, puedes realizar acciones adicionales si es necesario\n      console.log('Inicio de sesión exitoso. ID del estudiante:', estudianteId);\n\n      // Redirigir a la página después de iniciar sesión (ajusta la ruta según tu aplicación)\n      navigate('/dashboard');\n    } catch (error) {\n      setError('Inicio de sesión fallido. Verifica tus credenciales.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Correo Electr\\xF3nico o Usuario:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: correoOUsuario,\n          onChange: e => setCorreoOUsuario(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(EstudianteLoginForm, \"ng4jTiGU/ghlG5LKG5Vh2U/kmFw=\", false, function () {\n  return [useNavigate];\n});\n_c = EstudianteLoginForm;\nexport default EstudianteLoginForm;\nvar _c;\n$RefreshReg$(_c, \"EstudianteLoginForm\");","map":{"version":3,"names":["React","useState","EstudiantesService","useNavigate","jsxDEV","_jsxDEV","EstudianteLoginForm","_s","correoOUsuario","setCorreoOUsuario","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","estudianteId","loginEstudiante","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/mannu/Documents/ReactProjects/repositorio_v1/src/Componentes/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport EstudiantesService from '../../Services/EstudianteServices'; // Ajusta la ruta según tu estructura de carpetas\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction EstudianteLoginForm() {\r\n  const [correoOUsuario, setCorreoOUsuario] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const estudianteId = await EstudiantesService.loginEstudiante(correoOUsuario, password);\r\n\r\n      // Autenticación exitosa, puedes realizar acciones adicionales si es necesario\r\n      console.log('Inicio de sesión exitoso. ID del estudiante:', estudianteId);\r\n\r\n      // Redirigir a la página después de iniciar sesión (ajusta la ruta según tu aplicación)\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      setError('Inicio de sesión fallido. Verifica tus credenciales.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Iniciar Sesión</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <label>\r\n          Correo Electrónico o Usuario:\r\n          <input\r\n            type=\"text\"\r\n            value={correoOUsuario}\r\n            onChange={(e) => setCorreoOUsuario(e.target.value)}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Contraseña:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Iniciar Sesión</button>\r\n      </form>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EstudianteLoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,kBAAkB,MAAM,mCAAmC,CAAC,CAAC;AACpE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMhB,kBAAkB,CAACiB,eAAe,CAACX,cAAc,EAAEE,QAAQ,CAAC;;MAEvF;MACAU,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEH,YAAY,CAAC;;MAEzE;MACAJ,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,QAAQ,CAAC,sDAAsD,CAAC;IAClE;EACF,CAAC;EAED,oBACER,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrB,OAAA;MAAMsB,QAAQ,EAAEZ,WAAY;MAAAO,QAAA,gBAC1BjB,OAAA;QAAAiB,QAAA,GAAO,kCAEL,eAAAjB,OAAA;UACEuB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAErB,cAAe;UACtBsB,QAAQ,EAAGd,CAAC,IAAKP,iBAAiB,CAACO,CAAC,CAACe,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRrB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrB,OAAA;QAAAiB,QAAA,GAAO,gBAEL,eAAAjB,OAAA;UACEuB,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEnB,QAAS;UAChBoB,QAAQ,EAAGd,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACe,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRrB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACNd,KAAK,iBAAIP,OAAA;MAAAiB,QAAA,EAAIV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACnB,EAAA,CAjDQD,mBAAmB;EAAA,QAITH,WAAW;AAAA;AAAA6B,EAAA,GAJrB1B,mBAAmB;AAmD5B,eAAeA,mBAAmB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}