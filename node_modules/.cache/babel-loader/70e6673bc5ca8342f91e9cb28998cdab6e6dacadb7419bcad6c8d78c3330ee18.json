{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mannu\\\\Documents\\\\ReactProjects\\\\repositorio_v1\\\\src\\\\Componentes\\\\Docentes\\\\DocumentosAdd.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport DocentesService from '../../Services/DocenteServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearDocumento = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n\n  // Estados para los datos del documento y el archivo\n  const [nombre, setNombre] = useState('');\n  const [categoria, setCategoria] = useState('');\n  const [autor, setAutor] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n  const [fechaPublicacion, setFechaPublicacion] = useState('');\n  const [archivo, setArchivo] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Convierte la fecha a un formato compatible con el servidor (puedes ajustar esto según tu necesidad)\n      const fechaFormateada = new Date(fechaPublicacion).toISOString();\n\n      // Lee el contenido del archivo como un array de bytes\n      const archivoBinario = await leerArchivoComoBinario(archivo);\n\n      // Crea un objeto con los datos del documento y el archivo en formato binario\n      const documentoData = {\n        nombre,\n        categoria,\n        autor,\n        descripcion,\n        fechaPublicacion: fechaFormateada,\n        archivo: archivoBinario,\n        docentes: [{\n          id: id\n        }]\n      };\n\n      // Llama al método del servicio para crear el documento\n      const response = await DocentesService.crearDocumento(documentoData);\n\n      // Maneja la respuesta según sea necesario\n      console.log('Documento creado:', response.data);\n\n      // Redirige a otra página\n      history.push('/otra-pagina');\n\n      // Limpia los campos del formulario\n      limpiarCampos();\n    } catch (error) {\n      // Maneja los errores\n      console.error('Error al crear el documento:', error.message);\n    }\n  };\n  const handleFileChange = e => {\n    // Actualiza el estado del archivo al seleccionar un nuevo archivo\n    setArchivo(e.target.files[0]);\n  };\n  const leerArchivoComoBinario = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = event => {\n        // El contenido del archivo se almacena en event.target.result\n        resolve(event.target.result);\n      };\n      reader.onerror = error => {\n        reject(error);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  };\n  const limpiarCampos = () => {\n    setNombre('');\n    setCategoria('');\n    setAutor('');\n    setDescripcion('');\n    setFechaPublicacion('');\n    setArchivo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear Nuevo Documento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre del Documento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nombre,\n        onChange: e => setNombre(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Categor\\xEDa del Documento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: categoria,\n        onChange: e => setCategoria(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Autor del Documento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: autor,\n        onChange: e => setAutor(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descripci\\xF3n del Documento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: descripcion,\n        onChange: e => setDescripcion(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha de Publicaci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: fechaPublicacion,\n        onChange: e => setFechaPublicacion(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Archivo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Crear Documento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n};\n_s(CrearDocumento, \"B8So4x0/jcCXvJ1h4PaLk8sPI7c=\", true, function () {\n  return [useParams];\n});\n_c = CrearDocumento;\nexport default CrearDocumento;\nvar _c;\n$RefreshReg$(_c, \"CrearDocumento\");","map":{"version":3,"names":["React","useState","useParams","DocentesService","jsxDEV","_jsxDEV","CrearDocumento","_s","id","history","useHistory","nombre","setNombre","categoria","setCategoria","autor","setAutor","descripcion","setDescripcion","fechaPublicacion","setFechaPublicacion","archivo","setArchivo","handleSubmit","e","preventDefault","fechaFormateada","Date","toISOString","archivoBinario","leerArchivoComoBinario","documentoData","docentes","response","crearDocumento","console","log","data","push","limpiarCampos","error","message","handleFileChange","target","files","file","Promise","resolve","reject","reader","FileReader","onload","event","result","onerror","readAsArrayBuffer","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/mannu/Documents/ReactProjects/repositorio_v1/src/Componentes/Docentes/DocumentosAdd.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DocentesService from '../../Services/DocenteServices';\r\n\r\nconst CrearDocumento = () => {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n  \r\n    // Estados para los datos del documento y el archivo\r\n    const [nombre, setNombre] = useState('');\r\n    const [categoria, setCategoria] = useState('');\r\n    const [autor, setAutor] = useState('');\r\n    const [descripcion, setDescripcion] = useState('');\r\n    const [fechaPublicacion, setFechaPublicacion] = useState('');\r\n    const [archivo, setArchivo] = useState(null);\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      try {\r\n        // Convierte la fecha a un formato compatible con el servidor (puedes ajustar esto según tu necesidad)\r\n        const fechaFormateada = new Date(fechaPublicacion).toISOString();\r\n  \r\n        // Lee el contenido del archivo como un array de bytes\r\n        const archivoBinario = await leerArchivoComoBinario(archivo);\r\n  \r\n        // Crea un objeto con los datos del documento y el archivo en formato binario\r\n        const documentoData = {\r\n          nombre,\r\n          categoria,\r\n          autor,\r\n          descripcion,\r\n          fechaPublicacion: fechaFormateada,\r\n          archivo: archivoBinario,\r\n          docentes: [\r\n            {\r\n              id: id\r\n            }\r\n          ]\r\n        };\r\n  \r\n        // Llama al método del servicio para crear el documento\r\n        const response = await DocentesService.crearDocumento(documentoData);\r\n  \r\n        // Maneja la respuesta según sea necesario\r\n        console.log('Documento creado:', response.data);\r\n  \r\n        // Redirige a otra página\r\n        history.push('/otra-pagina');\r\n  \r\n        // Limpia los campos del formulario\r\n        limpiarCampos();\r\n  \r\n      } catch (error) {\r\n        // Maneja los errores\r\n        console.error('Error al crear el documento:', error.message);\r\n      }\r\n    };\r\n  \r\n    const handleFileChange = (e) => {\r\n      // Actualiza el estado del archivo al seleccionar un nuevo archivo\r\n      setArchivo(e.target.files[0]);\r\n    };\r\n  \r\n    const leerArchivoComoBinario = (file) => {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n  \r\n        reader.onload = (event) => {\r\n          // El contenido del archivo se almacena en event.target.result\r\n          resolve(event.target.result);\r\n        };\r\n  \r\n        reader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n  \r\n        reader.readAsArrayBuffer(file);\r\n      });\r\n    };\r\n  \r\n    const limpiarCampos = () => {\r\n      setNombre('');\r\n      setCategoria('');\r\n      setAutor('');\r\n      setDescripcion('');\r\n      setFechaPublicacion('');\r\n      setArchivo(null);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Crear Nuevo Documento</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Nombre del Documento:</label>\r\n          <input type=\"text\" value={nombre} onChange={(e) => setNombre(e.target.value)} required />\r\n  \r\n          <label>Categoría del Documento:</label>\r\n          <input type=\"text\" value={categoria} onChange={(e) => setCategoria(e.target.value)} required />\r\n  \r\n          <label>Autor del Documento:</label>\r\n          <input type=\"text\" value={autor} onChange={(e) => setAutor(e.target.value)} required />\r\n  \r\n          <label>Descripción del Documento:</label>\r\n          <textarea value={descripcion} onChange={(e) => setDescripcion(e.target.value)} required />\r\n  \r\n          <label>Fecha de Publicación:</label>\r\n          <input type=\"datetime-local\" value={fechaPublicacion} onChange={(e) => setFechaPublicacion(e.target.value)} required />\r\n  \r\n          <label>Archivo:</label>\r\n          <input type=\"file\" onChange={handleFileChange} required />\r\n  \r\n          <button type=\"submit\">Crear Documento</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CrearDocumento;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}