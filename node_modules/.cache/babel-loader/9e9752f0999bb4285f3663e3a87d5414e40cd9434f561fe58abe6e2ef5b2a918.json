{"ast":null,"code":"import axios from 'axios';\nconst DOCENTES_BASE_REST_API_URL = 'http://localhost:8082/api/docentes/';\nclass DocentesService {\n  constructor() {\n    this.getDocumentById = async documentoId => {\n      const url = `${DOCENTES_BASE_REST_API_URL}/documentos/${documentoId}`;\n      return axios.get(url);\n    };\n  }\n  getAllDocentes() {\n    return axios.get(DOCENTES_BASE_REST_API_URL);\n  }\n  getDocenteById(id) {\n    return axios.get(DOCENTES_BASE_REST_API_URL + id);\n  }\n  createDocente(docenteData) {\n    return axios.post(DOCENTES_BASE_REST_API_URL, docenteData);\n  }\n  updateDocente(id, docenteData) {\n    return axios.put(DOCENTES_BASE_REST_API_URL + id, docenteData);\n  }\n  deleteDocente(id) {\n    return axios.delete(DOCENTES_BASE_REST_API_URL + id);\n  }\n  async loginDocente(correoElectronico, password) {\n    try {\n      const response = await axios.post(DOCENTES_BASE_REST_API_URL + 'login', {\n        correoElectronico: correoElectronico,\n        password: password\n      });\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        throw new Error('Inicio de sesión fallido');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Método para obtener todos los documentos\n  getAllDocumentos() {\n    return axios.get(DOCENTES_BASE_REST_API_URL + 'documentos');\n  }\n\n  // metodo para crear un documento desde un formulario\n  createDocente(docenteData) {\n    return axios.post(DOCENTES_BASE_REST_API_URL + 'documentos', docenteData);\n  }\n}\nexport default new DocentesService();","map":{"version":3,"names":["axios","DOCENTES_BASE_REST_API_URL","DocentesService","constructor","getDocumentById","documentoId","url","get","getAllDocentes","getDocenteById","id","createDocente","docenteData","post","updateDocente","put","deleteDocente","delete","loginDocente","correoElectronico","password","response","status","data","Error","error","getAllDocumentos"],"sources":["C:/Users/mannu/Documents/ReactProjects/repositorio_v1/src/Services/DocenteServices.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst DOCENTES_BASE_REST_API_URL = 'http://localhost:8082/api/docentes/';\r\n\r\nclass DocentesService {\r\n  getAllDocentes() {\r\n    return axios.get(DOCENTES_BASE_REST_API_URL);\r\n  }\r\n\r\n  getDocenteById(id) {\r\n    return axios.get(DOCENTES_BASE_REST_API_URL + id);\r\n  }\r\n\r\n  createDocente(docenteData) {\r\n    return axios.post(DOCENTES_BASE_REST_API_URL, docenteData);\r\n  }\r\n\r\n  updateDocente(id, docenteData) {\r\n    return axios.put(DOCENTES_BASE_REST_API_URL + id, docenteData);\r\n  }\r\n\r\n  deleteDocente(id) {\r\n    return axios.delete(DOCENTES_BASE_REST_API_URL + id);\r\n  }\r\n\r\n  async loginDocente(correoElectronico, password) {\r\n    try {\r\n      const response = await axios.post(DOCENTES_BASE_REST_API_URL + 'login', {\r\n        correoElectronico: correoElectronico,\r\n        password: password\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        return response.data;\r\n      } else {\r\n        throw new Error('Inicio de sesión fallido');\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método para obtener todos los documentos\r\n  getAllDocumentos() {\r\n    return axios.get(DOCENTES_BASE_REST_API_URL + 'documentos');\r\n  }\r\n\r\n  // metodo para crear un documento desde un formulario\r\n  createDocente(docenteData) {\r\n    return axios.post(DOCENTES_BASE_REST_API_URL + 'documentos', docenteData);\r\n  }\r\n  \r\n \r\n\r\n   getDocumentById = async (documentoId) => {\r\n    const url = `${DOCENTES_BASE_REST_API_URL}/documentos/${documentoId}`;\r\n    return axios.get(url);\r\n  };\r\n  \r\n}\r\n\r\nexport default new DocentesService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,0BAA0B,GAAG,qCAAqC;AAExE,MAAMC,eAAe,CAAC;EAAAC,YAAA;IAAA,KAkDnBC,eAAe,GAAG,MAAOC,WAAW,IAAK;MACxC,MAAMC,GAAG,GAAI,GAAEL,0BAA2B,eAAcI,WAAY,EAAC;MACrE,OAAOL,KAAK,CAACO,GAAG,CAACD,GAAG,CAAC;IACvB,CAAC;EAAA;EApDDE,cAAcA,CAAA,EAAG;IACf,OAAOR,KAAK,CAACO,GAAG,CAACN,0BAA0B,CAAC;EAC9C;EAEAQ,cAAcA,CAACC,EAAE,EAAE;IACjB,OAAOV,KAAK,CAACO,GAAG,CAACN,0BAA0B,GAAGS,EAAE,CAAC;EACnD;EAEAC,aAAaA,CAACC,WAAW,EAAE;IACzB,OAAOZ,KAAK,CAACa,IAAI,CAACZ,0BAA0B,EAAEW,WAAW,CAAC;EAC5D;EAEAE,aAAaA,CAACJ,EAAE,EAAEE,WAAW,EAAE;IAC7B,OAAOZ,KAAK,CAACe,GAAG,CAACd,0BAA0B,GAAGS,EAAE,EAAEE,WAAW,CAAC;EAChE;EAEAI,aAAaA,CAACN,EAAE,EAAE;IAChB,OAAOV,KAAK,CAACiB,MAAM,CAAChB,0BAA0B,GAAGS,EAAE,CAAC;EACtD;EAEA,MAAMQ,YAAYA,CAACC,iBAAiB,EAAEC,QAAQ,EAAE;IAC9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACa,IAAI,CAACZ,0BAA0B,GAAG,OAAO,EAAE;QACtEkB,iBAAiB,EAAEA,iBAAiB;QACpCC,QAAQ,EAAEA;MACZ,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOD,QAAQ,CAACE,IAAI;MACtB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;;EAEA;EACAC,gBAAgBA,CAAA,EAAG;IACjB,OAAO1B,KAAK,CAACO,GAAG,CAACN,0BAA0B,GAAG,YAAY,CAAC;EAC7D;;EAEA;EACAU,aAAaA,CAACC,WAAW,EAAE;IACzB,OAAOZ,KAAK,CAACa,IAAI,CAACZ,0BAA0B,GAAG,YAAY,EAAEW,WAAW,CAAC;EAC3E;AASF;AAEA,eAAe,IAAIV,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}