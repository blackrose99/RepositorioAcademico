{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mannu\\\\Documents\\\\ReactProjects\\\\repositorio_v1\\\\src\\\\Componentes\\\\Documentos\\\\VerDocumento.js\",\n  _s = $RefreshSig$();\nimport { PDFDocument, rgb } from 'pdf-lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerDocumento = () => {\n  _s();\n  // ... (código anterior)\n\n  const [decodedPdf, setDecodedPdf] = useState(null);\n  useEffect(() => {\n    const fetchDocumento = async () => {\n      try {\n        const response = await DocentesService.getDocumentById(documentoId);\n        setDocumento(response.data);\n\n        // Decodificar la cadena Base64 y guardarla en el estado\n        const decodedBytes = Buffer.from(response.data.archivo, 'base64');\n        setDecodedPdf(decodedBytes);\n      } catch (error) {\n        console.error('Error al obtener el documento:', error);\n        setError(error);\n      }\n    };\n    fetchDocumento();\n  }, [documentoId]);\n  const openDecodedPdf = async () => {\n    try {\n      if (decodedPdf) {\n        const pdfDoc = await PDFDocument.load(decodedPdf);\n        // Ahora puedes trabajar con `pdfDoc`, por ejemplo, mostrarlo en un visor PDF\n        // o guardar el documento en un archivo si es necesario\n      }\n    } catch (error) {\n      console.error('Error al abrir el PDF decodificado:', error);\n    }\n  };\n\n  // Resto del componente...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openDecodedPdf,\n      children: \"Abrir PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(VerDocumento, \"wZA7YI568zHV9rB562zPOrYvEIU=\");\n_c = VerDocumento;\nvar _c;\n$RefreshReg$(_c, \"VerDocumento\");","map":{"version":3,"names":["PDFDocument","rgb","jsxDEV","_jsxDEV","VerDocumento","_s","decodedPdf","setDecodedPdf","useState","useEffect","fetchDocumento","response","DocentesService","getDocumentById","documentoId","setDocumento","data","decodedBytes","Buffer","from","archivo","error","console","setError","openDecodedPdf","pdfDoc","load","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mannu/Documents/ReactProjects/repositorio_v1/src/Componentes/Documentos/VerDocumento.js"],"sourcesContent":["import { PDFDocument, rgb } from 'pdf-lib';\r\n\r\nconst VerDocumento = () => {\r\n  // ... (código anterior)\r\n\r\n  const [decodedPdf, setDecodedPdf] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDocumento = async () => {\r\n      try {\r\n        const response = await DocentesService.getDocumentById(documentoId);\r\n        setDocumento(response.data);\r\n\r\n        // Decodificar la cadena Base64 y guardarla en el estado\r\n        const decodedBytes = Buffer.from(response.data.archivo, 'base64');\r\n        setDecodedPdf(decodedBytes);\r\n      } catch (error) {\r\n        console.error('Error al obtener el documento:', error);\r\n        setError(error);\r\n      }\r\n    };\r\n\r\n    fetchDocumento();\r\n  }, [documentoId]);\r\n\r\n  const openDecodedPdf = async () => {\r\n    try {\r\n      if (decodedPdf) {\r\n        const pdfDoc = await PDFDocument.load(decodedPdf);\r\n        // Ahora puedes trabajar con `pdfDoc`, por ejemplo, mostrarlo en un visor PDF\r\n        // o guardar el documento en un archivo si es necesario\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al abrir el PDF decodificado:', error);\r\n    }\r\n  };\r\n\r\n  // Resto del componente...\r\n\r\n  return (\r\n    <div className='container'>\r\n      {/* ... (otros detalles del documento) */}\r\n      <button onClick={openDecodedPdf}>Abrir PDF</button>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,GAAG,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,eAAe,CAACC,eAAe,CAACC,WAAW,CAAC;QACnEC,YAAY,CAACJ,QAAQ,CAACK,IAAI,CAAC;;QAE3B;QACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACR,QAAQ,CAACK,IAAI,CAACI,OAAO,EAAE,QAAQ,CAAC;QACjEb,aAAa,CAACU,YAAY,CAAC;MAC7B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDE,QAAQ,CAACF,KAAK,CAAC;MACjB;IACF,CAAC;IAEDX,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACI,WAAW,CAAC,CAAC;EAEjB,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,IAAIlB,UAAU,EAAE;QACd,MAAMmB,MAAM,GAAG,MAAMzB,WAAW,CAAC0B,IAAI,CAACpB,UAAU,CAAC;QACjD;QACA;MACF;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D;EACF,CAAC;;EAED;;EAEA,oBACElB,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,eAExBzB,OAAA;MAAQ0B,OAAO,EAAEL,cAAe;MAAAI,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3CID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}